The Spring Boot Trade Order application is a REST API application (no UI other than the landing page) that tracks the users portfolio totals  and stores the information on a daily basis.  It can break down the summary information for each user  by security, fund or as a total for the user.  The land  page just lists all the available end-points and the GETs will populate a browser window.   Using a tool like Postman, users and trade orders can be added through POSTs.
It is written in Spring Boot,  all the functionality to store and retrieve data comes from Hibernate (currently using H2 in memory db, so once a restart happens the app will only have the bootstrapped data that gets loaded on startup).   No SQL was needed with this application.  
When Trade Orders are added, the real-life value of the security to be used in the calculations is pulled from a separate microservice I built who's sole responsible is pricing information.   Also when a Trade Order is added a Message is sent to the ActiveMQ broker to let the application know that repricing needs to be done for the user that added the Trade Order.  
Both the Trade Order REST App and the Security Information Microservice are wrapped in their own Docker Containers.   These two containers are running on an AWS  EC2 instance I have configured.   I am using the AmazonMQ for messaging (which is basically just ActiveMQ wrapped up into the AWS umbrella.    The application does a summary for each user's portfolio at 11pm each night.
